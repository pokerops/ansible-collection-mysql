---
- name: Import install playbook
  ansible.builtin.import_playbook: pokerops.mysql.install
  vars:
    mysql_cluster_group: mysql_cluster_down

- name: Query cluster state
  hosts: mysql_cluster_down
  tasks:
    - name: Query MySQL Cluster status
      ansible.builtin.command:
        cmd: >
          mysqlsh --javascript --quiet-start=2
            --host {{ inventory_hostname }}
            --user clusteradmin
            --execute 'print(dba.getCluster("{{ mysql_cluster_name }}").status())'
      register: _mysql_cluster_status_query
      changed_when: false

    - name: Set MySQL Cluster facts
      ansible.builtin.set_fact:
        _mysql_cluster_initial: "{{ groups['mysql_cluster'] }}"
        _mysql_cluster_scaledown: "{{ groups['mysql_cluster_down'] }}"
        _mysql_cluster_members: "{{ _members_regex }}"
      vars:
        _query: "{{ _mysql_cluster_status_query.stdout | from_json }}"
        _members_topology: "{{ _query['defaultReplicaSet']['topology'] | dict2items }}"
        _members_list: "{{ _members_topology | map(attribute='key') }}"
        _members_regex: "{{ _members_list | map('regex_replace', ':3306', '') }}"

    - name: Debug MySQL Cluster facts
      ansible.builtin.debug:
        var: _mysql_cluster_members

    - name: Debug MySQL Cluster targets
      ansible.builtin.debug:
        var: _mysql_cluster_scaledown

    - name: Verify MySQL Cluster members
      ansible.builtin.assert:
        that:
          - (_mysql_cluster_initial | length) > (_mysql_cluster_scaledown | length)
          - (_mysql_cluster_members | length) == (_mysql_cluster_scaledown | length)
          - _mysql_cluster_members | difference(_mysql_cluster_scaledown) | length == 0
          - _mysql_cluster_scaledown | difference(_mysql_cluster_members) | length == 0

- name: Import verification playbook
  ansible.builtin.import_playbook: ./verify.yml
  vars:
    mysql_cluster_group: mysql_cluster_down
