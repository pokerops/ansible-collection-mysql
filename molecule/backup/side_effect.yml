---
- name: Import facts playbook
  ansible.builtin.import_playbook: pokerops.mysql.facts


- name: Back up master node
  hosts: _mysql_master
  become: true
  tasks:
    - name: Create temporary directory
      ansible.builtin.tempfile:
        state: directory
        prefix: sakila
      register: mysql_tmpdir
      changed_when: false

    - name: Load sakila db
      vars:
        sakila_bundle: "{{ mysql_tmpdir.path }}/sakila-db.tar.gz"
      block:
        - name: Download sakila tarball
          ansible.builtin.get_url:
            url: https://downloads.mysql.com/docs/sakila-db.tar.gz
            dest: "{{ sakila_bundle }}"
            http_agent: "curl/7.68.0"
          changed_when: false

        - name: Unarchive sakila tarball
          ansible.builtin.unarchive:
            src: "{{ sakila_bundle }}"
            dest: "{{ mysql_tmpdir.path }}"
            remote_src: true

        - name: Drop sakila DB
          community.mysql.mysql_db:
            name: sakila
            state: absent
            login_user: root
            login_password: "{{ mysql_root_password }}"

        - name: Create sakila DB
          community.mysql.mysql_db:
            name: sakila
            state: present
            login_user: root
            login_password: "{{ mysql_root_password }}"

        - name: Manage sakila DB schema
          community.mysql.mysql_db:
            name: sakila
            state: import
            login_user: root
            login_password: "{{ mysql_root_password }}"
            target: "{{ mysql_tmpdir.path }}/sakila-db/sakila-schema.sql"

        - name: Manage sakila DB data
          community.mysql.mysql_db:
            name: sakila
            state: import
            login_user: root
            login_password: "{{ mysql_root_password }}"
            target: "{{ mysql_tmpdir.path }}/sakila-db/sakila-data.sql"

      always:
        - name: Destroy tempdir
          ansible.builtin.file:
            dest: "{{ mysql_tmpdir.path }}/mysql.deb"
            state: absent
          changed_when: false

    - name: Take backup on master node
      ansible.builtin.command:
        cmd: /usr/local/bin/mysql-backup


- name: Back up slave nodes
  hosts: _mysql_slave
  become: true
  tasks:
    - name: Take backup on slave node
      ansible.builtin.command:
        cmd: /usr/local/bin/mysql-backup


- name: Drop cluster data
  hosts: _mysql_master
  become: true
  tasks:
    - name: Drop sakila DB data
      community.mysql.mysql_db:
        name: sakila
        state: absent
        login_user: root
        login_password: "{{ mysql_root_password }}"


- name: Restore xbstream backup
  hosts: all
  serial: 1
  become: true
  tasks:
    - name: List xbstream backup files
      ansible.builtin.find:
        paths: "/backup/{{ inventory_hostname_short }}"
        patterns: "*.xbstream"
      register: _backup_query

    - name: Set backup target facts
      ansible.builtin.set_fact:
        backup_target: "{{ _backup_query.files | map(attribute='path') | sort | last }}"

    - name: Restore cluster xbstream backup
      ansible.builtin.command:
        cmd: "/usr/local/bin/mysql-restore {{ backup_target }}"
