---
- name: Verify MySQL services
  hosts: "{{ mysql_cluster_group | default('mysql_cluster') }}"
  tags: always
  vars_files:
    - ../../playbooks/vars.yml
  tasks:
    - name: Gather service facts
      ansible.builtin.service_facts:

    - name: Verify MySQL deployment
      ansible.builtin.assert:
        that: mysql_daemon in services

    - name: Verify MySQL daemon
      ansible.builtin.assert:
        that: _mysql_service_state == 'running'
      vars:
        _mysql_service_state: "{{ services[mysql_daemon].state }}"

    - name: Query MySQL cluster status
      ansible.builtin.command:
        cmd: >
          mysqlsh --cluster --javascript --quiet-start=2
            --host {{ inventory_hostname }}
            --user {{ mysql_clusteradmin_username }}
            --execute 'print(cluster.status())'
      register: _mysql_cluster_status_query
      changed_when: false

    - name: Set MySQL cluser facts
      ansible.builtin.set_fact:
        _mysql_cluster_status: "{{ _mysql_cluster_status_query.stdout | from_json }}"

    - name: Verify MySQL cluster name
      ansible.builtin.assert:
        that: _mysql_cluster_status.clusterName == mysql_cluster_name

    - name: Verify MySQL cluster replicaset status
      ansible.builtin.assert:
        that: _mysql_cluster_status.defaultReplicaSet.status == "OK"

    - name: Verify MySQL cluster replicaset members
      ansible.builtin.assert:
        that: _cluster_members | difference(ansible_play_hosts_all) | length == 0
      vars:
        _cluster_members: "{{ _mysql_cluster_status.defaultReplicaSet.topology.keys() | map('split', ':') | map('first') }}"

    - name: Verify MySQL cluster replicaset member status
      ansible.builtin.assert:
        that: _cluster_member_status | reject('equalto', 'ONLINE') | length == 0
      vars:
        _cluster_member_status: "{{ _mysql_cluster_status.defaultReplicaSet.topology.values() | map(attribute='status') }}"

    - name: Debug cluster status
      ansible.builtin.debug:
        var: _mysql_cluster_status
      run_once: true
