---
dependency:
  name: galaxy
  options:
    role-file: requirements.yml
    requirements-file: requirements.yml
driver:
  name: default
platforms:
  - name: mysql-${MOLECULE_SCENARIO_NAME}-01
    image: "${MOLECULE_KVM_IMAGE}"
    cpu: 2
    mem: 4
    size: 30G
    groups:
      - mysql_cluster
      - mysql_cluster_up
  - name: mysql-${MOLECULE_SCENARIO_NAME}-02
    image: "${MOLECULE_KVM_IMAGE}"
    cpu: 2
    mem: 4
    size: 30G
    groups:
      - mysql_cluster
      - mysql_cluster_up
  - name: mysql-${MOLECULE_SCENARIO_NAME}-03
    image: "${MOLECULE_KVM_IMAGE}"
    cpu: 2
    mem: 4
    size: 30G
    groups:
      - mysql_cluster
      - mysql_cluster_up
  - name: mysql-${MOLECULE_SCENARIO_NAME}-04
    image: "${MOLECULE_KVM_IMAGE}"
    cpu: 2
    mem: 4
    size: 30G
    groups:
      - mysql_cluster_up
  - name: mysql-${MOLECULE_SCENARIO_NAME}-05
    image: "${MOLECULE_KVM_IMAGE}"
    cpu: 2
    mem: 4
    size: 30G
    groups:
      - mysql_cluster_up
provisioner:
  name: ansible
  config_options:
    defaults:
      remote_tmp: /tmp
      allow_world_readable_tmpfiles: true
      callbacks_enabled: ansible.posix.profile_tasks
  playbooks:
    create: ../common/create.yml
    prepare: ../common/prepare.yml
    converge: ../common/install.yml
    side_effect: ../common/scaleup.yml
    destroy: ../common/destroy.yml
  inventory:
    hosts:
      all:
        vars:
          libvirt_platforms: "{{ molecule_yml.platforms }}"
          mysql_nolog: false
          mysql_root_password: molecule
          mysql_clusteradmin_password: admin
          mysql_cluster_name: molecule
verifier:
  name: ansible
scenario:
  prepare_sequence:
    - prepare
  converge_sequence:
    - converge
  destroy_sequence:
    - destroy
  cleanup_sequence:
    - cleanup
  test_sequence:
    - dependency
    - create
    - prepare
    - converge
    - side_effect
    - verify
