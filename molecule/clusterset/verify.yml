---
- name: Load MySQL Cluster facts
  ansible.builtin.import_playbook: pokerops.mysql.facts
  vars:
    mysql_groupset: verify

- name: Verify MySQL Cluster services
  hosts:
    - "{{ mysql_group_prefix | default('_mysql') }}_verify_master"
    - "{{ mysql_group_prefix | default('_mysql') }}_verify_slave"
    - "{{ mysql_group_prefix | default('_mysql') }}_verify_alien"
  vars:
    _verify_master_group: "{{ mysql_group_prefix | default('_mysql') }}_verify_master"
  any_errors_fatal: true
  tasks:
    - name: End play for master host
      ansible.builtin.meta: end_host
      when: inventory_hostname in groups[_verify_master_group]

    - name: Verify MySQL Clusterset status
      block:
        - name: Query MySQL ClusterSet status
          ansible.builtin.command:
            cmd: >
              mysqlsh --javascript --cluster
                --host {{ inventory_hostname }}
                --user clusteradmin
                --execute 'print(clusterset.status({extended: 1}))'
          register: _mysql_clusterset_status_query
          changed_when: false

        - name: Set MySQL ClusterSet facts
          ansible.builtin.set_fact:
            mysql_clusterset_status: "{{ _mysql_clusterset_status }}"
            mysql_clusterset_clusters: "{{ _mysql_clusterset_clusters }}"
            mysql_clusterset_topology: "{{ _mysql_clusterset_topology }}"
            mysql_clusterset_members: "{{ _mysql_clusterset_members }}"
            mysql_clusterset_member_names: "{{ _mysql_clusterset_member_names }}"
            mysql_clusterset_member_status: "{{ _mysql_clusterset_member_status }}"
            mysql_clusterset_member_extra: "{{ _mysql_clusterset_member_extra }}"
            mysql_clusterset_member_missing: "{{ _mysql_clusterset_member_missing }}"
            mysql_clusterset_member_offline: "{{ _mysql_clusterset_member_offline }}"
          vars:
            _mysql_clusterset_status: "{{ _mysql_clusterset_status_query.stdout | from_json }}"
            _mysql_clusterset_clusters: "{{ _mysql_clusterset_status.clusters.values() }}"
            _mysql_clusterset_topology: "{{ _mysql_clusterset_clusters | map(attribute='topology') | flatten }}"
            _mysql_clusterset_members: "{{ _mysql_clusterset_topology | map('dict2items') | map('map', attribute='value') | flatten }}"
            _mysql_clusterset_member_names: "{{ _mysql_clusterset_members | map(attribute='address') | map('split', ':') | map('first') }}"
            _mysql_clusterset_member_status: "{{ _mysql_clusterset_members | map(attribute='status') }}"
            _mysql_clusterset_member_extra: "{{ _mysql_clusterset_member_names | difference(groups[mysql_cluster_group]) }}"
            _mysql_clusterset_member_missing: "{{ groups[mysql_cluster_group] | difference(_mysql_clusterset_member_names) }}"
            _mysql_clusterset_member_offline: "{{ _mysql_clusterset_member_status | reject('equalto', 'ONLINE') }}"

        - name: Debug MySQL Clusterset facts
          run_once: true
          block:
            - name: Debug MySQL ClusterSet status
              ansible.builtin.debug:
                msg: "{{ mysql_clusterset_status }}"

            - name: Debug MySQL ClusterSet topology
              ansible.builtin.debug:
                msg: "{{ mysql_clusterset_topology }}"

            - name: Debug MySQL ClusterSet target names
              ansible.builtin.debug:
                msg: "{{ groups[mysql_cluster_group] }}"

            - name: Debug MySQL ClusterSet member names
              ansible.builtin.debug:
                msg: "{{ mysql_clusterset_member_names }}"

            - name: Debug MySQL ClusterSet member status
              ansible.builtin.debug:
                msg: "{{ mysql_clusterset_member_status }}"

        - name: Verify MySQL ClusterSet status
          ansible.builtin.assert:
            that:
              - mysql_clusterset_member_offline | length == 0
              - mysql_clusterset_member_extra | length == 0
              - mysql_clusterset_member_missing | length == 0
            fail_msg: |-
              mysql_clusterset_member_offline: {{ mysql_clusterset_member_offline }}
              mysql_clusterset_member_extra: {{ mysql_clusterset_member_extra }}
              mysql_clusterset_member_missing: {{ mysql_clusterset_member_missing }}

        - name: Verify MySQL ClusterSet clusters
          ansible.builtin.assert:
            that:
              - (mysql_cluster_names | difference(mysql_target_clusters)) | length == 0
              - (mysql_target_clusters | difference(mysql_cluster_names)) | length == 0
            fail_msg: |-
              mysql_cluster_names: {{ mysql_cluster_names }}
              mysql_target_clusters: {{ mysql_target_clusters }}
          vars:
            mysql_cluster_names: "{{ mysql_clusterset_status.clusters.keys() }}"
            mysql_all_hostgroup_prefix: "{{ mysql_group_prefix | default('_mysql') }}_verify_all"
            mysql_inventory_groups: "{{ groups.keys() | select('match', '^' + mysql_all_hostgroup_prefix + '_.*') }}"
            mysql_inventory_clusters: "{{ mysql_inventory_groups | map('regex_replace', '^' + mysql_all_hostgroup_prefix + '_', '')  }}"
            mysql_target_clusters: "{{ mysql_verification_clusters | default(mysql_inventory_clusters) }}"
