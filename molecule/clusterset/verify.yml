---
- name: Load MySQL Cluster facts
  ansible.builtin.import_playbook: pokerops.mysql.facts


- name: Verify MySQL Cluster services
  hosts: mysql_cluster_scaledown
  tasks:
    - name: End play if mysql_verification_group is unset
      ansible.builtin.meta: end_play
      when: mysql_verification_group is not defined

    - name: End play for master host
      ansible.builtin.meta: end_host
      when: inventory_hostname in groups['_mysql_master']

    - name: Verify MySQL Clusterset status
      block:
        - name: Query MySQL ClusterSet status
          ansible.builtin.command:
            cmd: >
              mysqlsh --javascript --cluster
                --host {{ inventory_hostname }}
                --user clusteradmin
                --execute 'print(clusterset.status({extended: 1}))'
          register: _mysql_clusterset_status_query
          changed_when: false

        - name: Set MySQL ClusterSet facts
          ansible.builtin.set_fact:
            mysql_clusterset_status: "{{ _mysql_clusterset_status }}"
            mysql_clusterset_clusters: "{{ _mysql_clusterset_clusters }}"
            mysql_clusterset_topology: "{{ _mysql_clusterset_topology }}"
            mysql_clusterset_members: "{{ _mysql_clusterset_members }}"
            mysql_clusterset_member_names: "{{ _mysql_clusterset_member_names }}"
            mysql_clusterset_member_status: "{{ _mysql_clusterset_member_status }}"
            mysql_clusterset_member_extra: "{{ _mysql_clusterset_member_extra }}"
            mysql_clusterset_member_missing: "{{ _mysql_clusterset_member_missing }}"
            mysql_clusterset_member_offline: "{{ _mysql_clusterset_member_offline }}"
          vars:
            _mysql_clusterset_status: "{{ _mysql_clusterset_status_query.stdout | from_json }}"
            _mysql_clusterset_clusters: "{{ _mysql_clusterset_status.clusters.values() }}"
            _mysql_clusterset_topology: "{{ _mysql_clusterset_clusters | map(attribute='topology') | flatten }}"
            _mysql_clusterset_members: "{{ _mysql_clusterset_topology | map('dict2items') | map('map', attribute='value') | flatten }}"
            _mysql_clusterset_member_names: "{{ _mysql_clusterset_members | map(attribute='address') | map('split', ':') | map('first') }}"
            _mysql_clusterset_member_status: "{{ _mysql_clusterset_members | map(attribute='status') }}"
            _mysql_clusterset_member_extra: "{{ _mysql_clusterset_member_names | difference(groups[mysql_verification_group]) }}"
            _mysql_clusterset_member_missing: "{{ groups[mysql_verification_group] | difference(_mysql_clusterset_member_names) }}"
            _mysql_clusterset_member_offline: "{{ _mysql_clusterset_member_status | reject('equalto', 'ONLINE') }}"

        - name: Debug MySQL ClusterSet status
          ansible.builtin.debug:
            msg: "{{ mysql_clusterset_status }}"

        - name: Debug MySQL ClusterSet topology
          ansible.builtin.debug:
            msg: "{{ mysql_clusterset_topology }}"

        - name: Debug MySQL ClusterSet target names
          ansible.builtin.debug:
            msg: "{{ groups[mysql_verification_group] }}"

        - name: Debug MySQL ClusterSet member names
          ansible.builtin.debug:
            msg: "{{ mysql_clusterset_member_names }}"

        - name: Debug MySQL ClusterSet member status
          ansible.builtin.debug:
            msg: "{{ mysql_clusterset_member_status }}"

        - name: Verify MySQL ClusterSet status
          ansible.builtin.assert:
            that:
              - mysql_clusterset_member_offline | length == 0
              - mysql_clusterset_member_extra | length == 0
              - mysql_clusterset_member_missing | length == 0
