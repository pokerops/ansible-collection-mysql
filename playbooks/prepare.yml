---
- name: Deploy MySQL repository
  hosts: "_mysql_master:_mysql_slave:_mysql_alien"
  become: true
  vars_files:
    - vars.yml
  tasks:
    - name: Verify mysql variable definitions
      ansible.builtin.assert:
        that:
          - mysql_root_password is defined
          - mysql_clusteradmin_password is defined
          - mysql_cluster_name is defined
        fail_msg: "mysql_cluster_name, mysql_root_password and mysql_clusteradmin_password must be defined"

    - name: Add host entries for cluster members
      ansible.builtin.lineinfile:
        path: /etc/hosts
        regexp: ".*{{ item }}.*"
        line: "{{ _member_address }} {{ _fqdn }} {{ _hostname }}"
      vars:
        _member_address: "{{ hostvars[item]['ansible_default_ipv4']['address'] }}"
        _fqdn: "{{ hostvars[item]['ansible_fqdn'] }}"
        _hostname: "{{ hostvars[item]['ansible_hostname'] }}"
      loop: "{{ ansible_play_hosts }}"
      when: mysql_config_hostnames

    - name: Check package pins
      ansible.builtin.assert:
        that: mysql_shell_package is not search('=')
        fail_msg: "Playbook does not support mysql_shell package pinning, got {{ mysql_shell_package }}"

    - name: Deploy Debian MySQL repository
      when: ansible_os_family == 'Debian'
      block:
        - name: Query installed packages
          ansible.builtin.package_facts:
            manager: auto

        - name: Create tempdir
          ansible.builtin.tempfile:
            state: directory
            prefix: mysql
          register: mysql_tmpdir
          changed_when: false

        - name: Deploy MySQL apt repository
          when: mysql_apt_config not in packages
          block:
            - name: Download MySQL apt repository
              ansible.builtin.get_url:
                url: "{{ mysql_repo_deb }}"
                dest: "{{ mysql_tmpdir.path }}/mysql.deb"
                http_agent: "curl/7.68.0"
              changed_when: false

            - name: Add MySQL apt repository
              ansible.builtin.apt:
                deb: "{{ mysql_tmpdir.path }}/mysql.deb"

            - name: Add gpg key for MySQL repository
              ansible.builtin.apt_key:
                keyserver: hkp://keyserver.ubuntu.com:80
                id: "{{ mysql_pgp_keyserver }}"

            - name: Configure MySQL release version
              ansible.builtin.debconf:
                name: "{{ mysql_apt_config }}"
                question: "{{ mysql_apt_config }}/select-server"
                value: "mysql-{{ mysql_release}}"
                vtype: select

            - name: Activate MySQL release version
              ansible.builtin.debconf:
                name: "{{ mysql_apt_config }}"
                question: "{{ mysql_apt_config }}/select-product"
                value: Ok
                vtype: select

            - name: Update apt cache
              ansible.builtin.apt:
                update_cache: yes
              changed_when: false

          always:
            - name: Destroy tempdir
              ansible.builtin.file:
                dest: "{{ mysql_tmpdir.path }}/mysql.deb"
                state: absent
              changed_when: false

        - name: Install package dependencies
          ansible.builtin.package:
            name:
              - apparmor
              - debconf-utils
              - python3-pexpect
