---
- name: Verify role preconditions
  ansible.builtin.assert:
    that:
      - mysql_packages is defined
      - mysql_root_password is defined

- name: Debug package targets
  ansible.builtin.debug:
    var: mysql_packages

- name: Set install facts
  ansible.builtin.set_fact:
    mysql_install_packages: false
    mysql_config_include_files:
      - src: ansible.cnf
        force: yes
      - src: cluster.cnf
        force: yes

- name: Set root password update flag
  ansible.builtin.set_fact:
    mysql_root_password_update: true
  when: mysql_root_password_update is not defined

- name: Query installed packages
  ansible.builtin.package_facts:
    manager: auto

- name: Unhold MySQL packages
  ansible.builtin.dpkg_selections:
    name: "{{ item }}"
    selection: install
  when: item in packages
  loop: "{{ mysql_packages | map('split', '=') | map('first') }}"
  changed_when: false

- name: Include MySQL variables
  ansible.builtin.include_role:
    name: pokerops.mysql.mysql
    tasks_from: "variables"

- name: Deploy MySQL packages
  ansible.builtin.include_role:
    name: pokerops.mysql.mysql
    tasks_from: "setup-{{ ansible_os_family }}"

- name: Configure MySQL installation
  ansible.builtin.include_role:
    name: pokerops.mysql.mysql
    tasks_from: "configure"

- name: Query cluster status
  community.mysql.mysql_query:
    query: SELECT @@global.super_read_only AS sro
    login_user: "{{ mysql_root_username }}"
    login_password: "{{ mysql_root_password }}"
  register: _slave_query

- name: Manage MySQL deployment
  when: _slave_query.query_result[0][0]['sro'] ==  0
  block:
    - name: Secure MySQL installation
      ansible.builtin.include_role:
        name: pokerops.mysql.mysql
        tasks_from: "secure-installation"

    - name: Manage MySQL clusteradmin user
      community.mysql.mysql_user:
        name: "{{ mysql_clusteradmin_username }}"
        host: '%'
        password: "{{ mysql_clusteradmin_password }}"
        priv: '*.*:ALL,GRANT'
        column_case_sensitive: true
      no_log: "{{ mysql_nolog | default(True) }}"

- name: Hold MySQL packages
  ansible.builtin.dpkg_selections:
    name: "{{ item }}"
    selection: hold
  loop: "{{ mysql_packages | map('split', '=') | map('first') }}"
  changed_when: false
